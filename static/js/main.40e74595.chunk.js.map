{"version":3,"sources":["redux/sidebarDuck.ts","redux/charsDuck.ts","components/charsModal/CharsModal.tsx","components/charsModal/index.ts","redux/filterDuck.ts","utils/icons/Icons.tsx","components/sidebarHeadItem/index.ts","components/sidebarHeadItem/SidebarHeadItem.tsx","components/sidebarFootItem/index.ts","components/sidebarFootItem/SidebarFootItem.tsx","components/sidebarMenuItem/index.ts","components/sidebarMenuItem/SidebarMenuItem.tsx","components/space/index.ts","components/space/Space.tsx","components/filter/Filter.tsx","components/filter/index.ts","redux/modalDuck.ts","components/itemData/ItemData.tsx","components/itemData/index.ts","components/loader/index.ts","components/loader/Loader.tsx","components/modalItemGrid/index.ts","components/modalItemGrid/ModalItemGrid.tsx","components/locatEpisModal/LocatEpisModal.tsx","components/locatEpisModal/index.ts","components/menuButton/index.ts","components/menuButton/MenuButton.tsx","components/modalPopup/ModalPopup.tsx","components/modalPopup/index.ts","components/pageButton/PageButton.tsx","components/pageButton/index.ts","components/switchFilter/index.ts","components/switchFilter/SwitchFilter.tsx","components/searcher/Searcher.tsx","components/searcher/index.ts","screens/home/Home.tsx","screens/home/index.ts","App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["sidebarStatuses","toggled","hidden","changeToggledStatus","dispatch","getState","type","payload","initialData","input","fetching","info","prev","next","data","error","client","ApolloClient","uri","clearData","getInput","getMeTheData","page","byEntitie","menuFilter","characters","length","charsMenuItem","getCharacterAction","locationsMenuItem","getLocationsAction","episodesMenuItem","getEpisodesAction","pg","char","byName","query","gql","variables","then","res","catch","err","message","locations","episodes","connect","CharsModal","state","actualObject","modalStatus","name","image","species","gender","className","src","alt","MenuIcon","CharIcon","LocationIcon","EpisodesIcon","PuzzleIcon","CircleIcon","style","fontSize","SidebarHeadItem","onClick","text","SidebarFootItem","href","target","rel","SidebarMenuItem","icon","active","suffix","Space","Filter","hiddenStatus","toggledStatus","charFilterStatus","locationsFilterStatus","episodesFilterStatus","changeHiddenStatus","width","activeSidebar","charFilterActive","locationsFilterActive","episodesFilterActive","useState","window","innerWidth","setWidth","useEffect","addEventListener","resizeSidebar","w","collapsed","breakPoint","onToggle","iconShape","open","changeModalStatus","ItemData","storeActualObject","actual","dimension","episode","id","a","key","Loader","ModalItemGrid","LocatEpisModal","firstFiveResidents","firstFiveCharacters","FiveRes","FiveChars","air_date","residents","slice","map","fiveChars","MenuButton","Modal","setAppElement","ModalPopup","isOpen","onRequestClose","overlay","backgroundColor","display","justifyContent","alignItems","PageButton","prevButton","document","getElementById","nextButton","classList","add","remove","SwitcherFilter","Searcher","element","focus","this","props","changeFilter","filterType","byNameOrType","charFilter","locationFilter","entitie","inputValue","placeholder","onChange","event","value","stillOnFocus","React","Component","Home","chars","loading","swal","results","App","Boolean","location","hostname","match","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","generateStore","WithStore","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.40e74595.chunk.js","sourcesContent":["// CONSTS\nlet CHANGE_SIDEBAR_TOGGLED_STATUS = 'SIDEBAR_TOGGLE_STATUS';\nlet CHANGE_SIDEBAR_HIDDEN_STATUS = 'SIDEBAR_HIDDEN_STATUS';\n\nlet sidebarStatuses = {\n  toggled: false,\n  hidden: false,\n};\n\n// REDUCERS\nexport default function reducer(state = sidebarStatuses, action: any) {\n  switch (action.type) {\n    case CHANGE_SIDEBAR_TOGGLED_STATUS:\n      return { ...state, toggled: action.payload };\n    case CHANGE_SIDEBAR_HIDDEN_STATUS:\n      return { ...state, hidden: action.payload };\n    default:\n      return state;\n  }\n}\n\n// ACTIONS\nexport let changeHiddenStatus = (width: any) => (\n  dispatch: any,\n  getState: any\n) => {\n  let { hidden } = getState().sidebarStatuses;\n  let { toggled } = getState().sidebarStatuses;\n  width < 769\n    ? dispatch({\n        type: CHANGE_SIDEBAR_TOGGLED_STATUS,\n        payload: !toggled,\n      })\n    : dispatch({\n        type: CHANGE_SIDEBAR_HIDDEN_STATUS,\n        payload: !hidden,\n      });\n};\n\nexport let changeToggledStatus = () => (dispatch: any, getState: any) => {\n  let { toggled } = getState().sidebarStatuses;\n  dispatch({\n    type: CHANGE_SIDEBAR_TOGGLED_STATUS,\n    payload: !toggled,\n  });\n};\n\nexport let activeSidebar = () => (dispatch: any, getState: any) => {\n  dispatch({\n    type: CHANGE_SIDEBAR_HIDDEN_STATUS,\n    payload: false,\n  });\n};\n","// APOLLO CLIENT ──────────────────────────────────────────────────────────\nimport ApolloClient, { gql } from 'apollo-boost';\n\n// CONSTS ─────────────────────────────────────────────────────────────────\nlet initialData = {\n  input: '',\n  fetching: false,\n  info: {},\n  prev: null,\n  next: null,\n  data: [],\n  error: '',\n};\n\nlet client = new ApolloClient({\n  uri: 'https://rickandmortyapi.com/graphql',\n});\n\nlet STORE_INPUT = 'STORE_INPUT';\nlet CLEAR_DATA = 'CLEAR_DATA';\nlet GET_DATA = 'GET_DATA';\nlet GET_CHARS_DATA_SUCCESS = 'GET_CHARS_DATA_SUCCESS';\nlet GET_LOCATIONS_DATA_SUCCESS = 'GET_LOCATIONS_DATA_SUCCESS';\nlet GET_EPISODES_DATA_SUCCESS = 'GET_EPISODES_DATA_SUCCESS';\nlet GET_DATA_ERROR = 'GET_DATA_ERROR';\n\n// REDUCER\nexport default function reducer(state = initialData, action: any) {\n  switch (action.type) {\n    case STORE_INPUT:\n      return { ...state, input: action.payload };\n    case GET_DATA:\n      return { ...state, fetching: true };\n    case GET_CHARS_DATA_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        data: action.payload.results,\n        info: action.payload.info,\n        prev: action.payload.info.prev,\n        next: action.payload.info.next,\n      };\n    case GET_LOCATIONS_DATA_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        data: action.payload.results,\n        info: action.payload.info,\n        prev: action.payload.info.prev,\n        next: action.payload.info.next,\n      };\n    case GET_EPISODES_DATA_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        data: action.payload.results,\n        info: action.payload.info,\n        prev: action.payload.info.prev,\n        next: action.payload.info.next,\n      };\n    case GET_DATA_ERROR:\n      return { ...state, fetching: false, error: action.payload, input: '' };\n    case CLEAR_DATA:\n      return { ...state, error: '', data: action.payload, input: '' };\n    default:\n      return state;\n  }\n}\n\n// ACTIONS\n\nexport let clearData = () => (dispatch: any, getState: any) => {\n  dispatch({\n    type: CLEAR_DATA,\n    payload: [],\n  });\n};\n\nexport let getInput = (input: string) => (dispatch: any, getState: any) => {\n  if (input === '') {\n    clearData()(dispatch, getState);\n  }\n\n  dispatch({\n    type: STORE_INPUT,\n    payload: input,\n  });\n\n  getMeTheData(1)(dispatch, getState);\n};\n\nexport let getMeTheData = (page: number) => (dispatch: any, getState: any) => {\n  let byEntitie = getState().menuFilter;\n  let { input } = getState().characters;\n\n  if (input.length > 2) {\n    if (byEntitie.charsMenuItem) {\n      return getCharacterAction(page, input)(dispatch, getState);\n    } else if (byEntitie.locationsMenuItem) {\n      return getLocationsAction(page, input)(dispatch, getState);\n    } else if (byEntitie.episodesMenuItem) {\n      return getEpisodesAction(page, input)(dispatch, getState);\n    }\n  }\n};\n\nexport let getCharacterAction = (pg: number, char?: string) => (\n  dispatch: any,\n  getState: any\n) => {\n  let { byName } = getState().menuFilter;\n\n  if (byName === true) {\n    var query = gql`\n      query searchCharactersByName($pg: Int, $char: String) {\n        characters(page: $pg, filter: { name: $char }) {\n          info {\n            count\n            pages\n            prev\n            next\n          }\n          results {\n            id\n            name\n            species\n            type\n            gender\n            image\n          }\n        }\n      }\n    `;\n  } else {\n    query = gql`\n      query searchCharactersByName($pg: Int, $char: String) {\n        characters(page: $pg, filter: { type: $char }) {\n          info {\n            count\n            pages\n            prev\n            next\n          }\n          results {\n            id\n            name\n            species\n            type\n            gender\n            image\n          }\n        }\n      }\n    `;\n  }\n\n  let variables = {\n    pg,\n    char,\n  };\n\n  dispatch({\n    type: GET_DATA,\n  });\n\n  return client\n    .query({\n      query,\n      variables,\n    })\n    .then((res) => {\n      dispatch({\n        type: GET_CHARS_DATA_SUCCESS,\n        payload: res.data.characters,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_DATA_ERROR,\n        payload: err.message,\n      });\n    });\n};\n\nlet getLocationsAction = (pg: number, char: string) => (\n  dispatch: any,\n  getState: any\n) => {\n  let { byName } = getState().menuFilter;\n\n  if (byName === true) {\n    var query = gql`\n      query searchLocationsByName($pg: Int, $char: String) {\n        locations(page: $pg, filter: { name: $char }) {\n          info {\n            count\n            pages\n            prev\n            next\n          }\n          results {\n            id\n            name\n            type\n            dimension\n            residents {\n              name\n              image\n            }\n          }\n        }\n      }\n    `;\n  } else {\n    query = gql`\n      query searchLocationsByName($pg: Int, $char: String) {\n        locations(page: $pg, filter: { type: $char }) {\n          info {\n            count\n            pages\n            prev\n            next\n          }\n          results {\n            id\n            name\n            type\n            dimension\n            residents {\n              name\n              image\n            }\n          }\n        }\n      }\n    `;\n  }\n\n  let variables = {\n    pg,\n    char,\n  };\n\n  dispatch({\n    type: GET_DATA,\n  });\n\n  return client\n    .query({\n      query,\n      variables,\n    })\n    .then((res) => {\n      dispatch({\n        type: GET_LOCATIONS_DATA_SUCCESS,\n        payload: res.data.locations,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_DATA_ERROR,\n        payload: err.message,\n      });\n    });\n};\n\nlet getEpisodesAction = (pg: number, char: string) => (\n  dispatch: any,\n  getState: any\n) => {\n  var query = gql`\n    query searchEpisodesByName($pg: Int, $char: String) {\n      episodes(page: $pg, filter: { name: $char }) {\n        info {\n          count\n          pages\n          prev\n          next\n        }\n        results {\n          id\n          name\n          air_date\n          episode\n          characters {\n            name\n            image\n          }\n        }\n      }\n    }\n  `;\n\n  let variables = {\n    pg,\n    char,\n  };\n\n  dispatch({\n    type: GET_DATA,\n  });\n\n  return client\n    .query({\n      query,\n      variables,\n    })\n    .then((res) => {\n      dispatch({\n        type: GET_EPISODES_DATA_SUCCESS,\n        payload: res.data.episodes,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: GET_DATA_ERROR,\n        payload: err.message,\n      });\n    });\n};\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\n\n// STYLES ─────────────────────────────────────────────────────────\nimport '../modalPopup/modalPopup.css';\n\ninterface Props {\n  actualObject?: any;\n}\n\nlet CharsModal = ({ actualObject }: Props) => {\n  let { name, image, species, gender, type } = actualObject;\n  let unknown = 'unknown';\n  return (\n    <div className=\"modal-container\">\n      <div className=\"modal-image-container\">\n        <img className=\"modal-image\" src={image} alt=\"from-api\" />\n      </div>\n      <div className=\"modal-text\">\n        <h2 className=\"modal-name-text\">{name}</h2>\n      </div>\n      <div className=\"data-cont\">\n        <div className=\"centered-data-cont\">\n          <div className=\"modal-text margin-bottom-phone pad-left\">\n            <h2 className=\"modal-title\">Type</h2>\n            <h2 className=\"center-text type\">{type ? type : unknown}</h2>\n          </div>\n          <div className=\"modal-text margin-bottom-slighty pad-left\">\n            <h2 className=\"modal-title\">Gender</h2>\n            <h2 className=\"center-text genre\">{gender ? gender : unknown}</h2>\n          </div>\n          <div className=\"modal-text pad-left\">\n            <h2 className=\"modal-title\">Species</h2>\n            <h2 className=\"center-text species\">\n              {species ? species : unknown}\n            </h2>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapState(state: any) {\n  return {\n    actualObject: state.modalStatus.data,\n  };\n}\nexport default connect(mapState)(CharsModal);\n","import CharsModal from './CharsModal';\nexport default CharsModal;\n","// ACTIONS IMPORTS\nimport { clearData } from './charsDuck';\n\n// CONSTS\nlet CHARACTERS_STATUS_MENU = 'CHARACTERS_STATUS_MENU';\nlet LOCATIONS_STATUS_MENU = 'LOCATIONS_STATUS_MENU';\nlet EPISODES_STATUS_MENU = 'EPISODES_STATUS_MENU';\nlet SWITCH_FILTER = 'SWITCH_FILTER';\n\nlet initialData = {\n  charsMenuItem: true,\n  locationsMenuItem: false,\n  episodesMenuItem: false,\n  byName: true,\n};\n\n// REDUCERS\nexport default function reducer(state = initialData, action: any) {\n  switch (action.type) {\n    case CHARACTERS_STATUS_MENU:\n      return {\n        ...state,\n        charsMenuItem: true,\n        locationsMenuItem: false,\n        episodesMenuItem: false,\n      };\n    case LOCATIONS_STATUS_MENU:\n      return {\n        ...state,\n        charsMenuItem: false,\n        locationsMenuItem: true,\n        episodesMenuItem: false,\n      };\n    case EPISODES_STATUS_MENU:\n      return {\n        ...state,\n        charsMenuItem: false,\n        locationsMenuItem: false,\n        episodesMenuItem: true,\n      };\n    case SWITCH_FILTER:\n      return { ...state, byName: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport let charFilterActive = () => (dispatch: any, getState: any) => {\n  clearData()(dispatch, getState);\n\n  dispatch({\n    type: CHARACTERS_STATUS_MENU,\n  });\n};\n\nexport let locationsFilterActive = () => (dispatch: any, getState: any) => {\n  clearData()(dispatch, getState);\n\n  dispatch({\n    type: LOCATIONS_STATUS_MENU,\n  });\n};\n\nexport let episodesFilterActive = () => (dispatch: any, getState: any) => {\n  clearData()(dispatch, getState);\n\n  dispatch({\n    type: EPISODES_STATUS_MENU,\n  });\n};\n\nexport let changeFilter = () => (dispatch: any, getState: any) => {\n  let { byName } = getState().menuFilter;\n  dispatch({\n    type: SWITCH_FILTER,\n    payload: !byName,\n  });\n};\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n}\n\nexport let MenuIcon = () => {\n  return <i className=\"fas fa-bars fa-lg\" />;\n};\n\nexport let CharIcon = () => {\n  return <i className=\"fas fa-user-astronaut fa-2x\" />;\n};\n\nexport let LocationIcon = () => {\n  return <i className=\"fas fa-rocket fa-2x\" />;\n};\n\nexport let EpisodesIcon = () => {\n  return <i className=\"fas fa-book fa-lg fa-2x\" />;\n};\n\nexport let PuzzleIcon = ({ className }: Props) => {\n  return <i className={`fas fa-puzzle-piece fa-xl ${className}`} />;\n};\n\nexport let SearchIcon = () => {\n  return <i className=\"fas fa-search\" />;\n};\n\nexport let CircleIcon = () => {\n  return <i className=\"fas fa-circle\" style={{ fontSize: '8px' }} />;\n};\n","import SidebarHeadItem from './SidebarHeadItem';\nexport default SidebarHeadItem;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport { MenuIcon } from '../../utils/icons/Icons';\nimport '../../utils/styles/sidebar/styles.css';\nimport './sidebarHeadItem.css';\n\ninterface Props {\n  onClick: () => void;\n  text?: string;\n}\n\nlet SidebarHeadItem = ({ onClick, text }: Props) => {\n  return (\n    <ul className=\"header-underline\" onClick={onClick}>\n      <li className=\"pro-menu-item\">\n        <div className=\"pro-inner-item\">\n          <span className=\"pro-icon-wrapper\">\n            <span className=\"pro-icon\">\n              <MenuIcon />\n            </span>\n          </span>\n          <span className=\"pro-item-content headerText\">{text}</span>\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default SidebarHeadItem;\n","import SidebarFootItem from './SidebarFootItem';\nexport default SidebarFootItem;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport { PuzzleIcon } from '../../utils/icons/Icons';\nimport './sidebarFootItem.css';\n\ninterface Props {\n  text?: string;\n}\n\nlet SidebarFootItem = () => {\n  return (\n    <div className=\"container\">\n      <a\n        href=\"https://thepuzzle.digital/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"bg-icon\"\n      >\n        <PuzzleIcon className=\"icon\" />\n        <h6>Puzzle Challenge</h6>\n      </a>\n    </div>\n  );\n};\n\nexport default SidebarFootItem;\n","import SidebarMenuItem from './SidebarMenuItem';\nexport default SidebarMenuItem;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// SIDEBAR FILTER ─────────────────────────────────────────────────\nimport { MenuItem } from 'react-pro-sidebar';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport { CircleIcon } from '../../utils/icons/Icons';\nimport '../../utils/styles/sidebar/styles.css';\n\ninterface Props {\n  text: string;\n  icon: object;\n  active: boolean;\n  onClick: () => void;\n}\n\nlet SidebarMenuItem = ({ text, icon, active, onClick }: Props) => {\n  return (\n    <div onClick={onClick}>\n      <MenuItem\n        icon={icon}\n        active={active}\n        suffix={active ? <CircleIcon /> : null}\n      >\n        {text}\n      </MenuItem>\n    </div>\n  );\n};\n\nexport default SidebarMenuItem;\n","import Space from './Space';\nexport default Space;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES ─────────────────────────────────────────────────────────\nimport './space.css';\n\nlet Space = () => {\n  return <div className=\"space\"></div>;\n};\n\nexport default Space;\n","// REACT ──────────────────────────────────────────────────────────\nimport React, { useState, useEffect } from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\nimport {\n  activeSidebar,\n  changeHiddenStatus,\n  changeToggledStatus,\n} from '../../redux/sidebarDuck';\nimport {\n  charFilterActive,\n  locationsFilterActive,\n  episodesFilterActive,\n} from '../../redux/filterDuck';\n\n// SIDEBAR ──────────────────────────────────────────────────────\nimport {\n  ProSidebar,\n  SidebarContent,\n  Menu,\n  SidebarFooter,\n} from 'react-pro-sidebar';\nimport SidebarHeadItem from '../sidebarHeadItem';\nimport SidebarFootItem from '../sidebarFootItem';\nimport SidebarMenuItem from '../sidebarMenuItem';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport { CharIcon, LocationIcon, EpisodesIcon } from '../../utils/icons/Icons';\nimport Space from '../space';\nimport '../../utils/styles/sidebar/styles.css';\nimport './filter.css';\n\nfunction Filter({\n  hiddenStatus,\n  toggledStatus,\n  activeSidebar,\n  changeHiddenStatus,\n  changeToggledStatus,\n  charFilterActive,\n  locationsFilterActive,\n  episodesFilterActive,\n  charFilterStatus,\n  locationsFilterStatus,\n  episodesFilterStatus,\n}: any) {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeSidebar);\n  });\n\n  let resizeSidebar = () => {\n    let w = window.innerWidth;\n    setWidth(w);\n    return w < 769 ? activeSidebar() : null;\n  };\n\n  return (\n    <ProSidebar\n      width={30}\n      image=\"https://wallpaperaccess.com/full/795172.jpg\"\n      collapsed={hiddenStatus}\n      className=\"flex\"\n      breakPoint=\"md\"\n      toggled={toggledStatus}\n      onToggle={() => changeToggledStatus()}\n    >\n      <SidebarContent>\n        <Menu iconShape=\"circle\">\n          <SidebarHeadItem\n            text=\"Filter Menu\"\n            onClick={() => changeHiddenStatus(width)}\n          />\n          <Space />\n          <SidebarMenuItem\n            active={charFilterStatus}\n            icon={<CharIcon />}\n            onClick={() => charFilterActive()}\n            text=\"Characters\"\n          />\n          <SidebarMenuItem\n            active={locationsFilterStatus}\n            icon={<LocationIcon />}\n            onClick={() => locationsFilterActive()}\n            text=\"Locations\"\n          />\n          <SidebarMenuItem\n            active={episodesFilterStatus}\n            icon={<EpisodesIcon />}\n            onClick={() => episodesFilterActive()}\n            text=\"Episodes\"\n          />\n        </Menu>\n      </SidebarContent>\n      <SidebarFooter>\n        <SidebarFootItem />\n      </SidebarFooter>\n    </ProSidebar>\n  );\n}\n\nfunction mapState(state: any) {\n  return {\n    hiddenStatus: state.sidebarStatuses.hidden,\n    toggledStatus: state.sidebarStatuses.toggled,\n    charFilterStatus: state.menuFilter.charsMenuItem,\n    locationsFilterStatus: state.menuFilter.locationsMenuItem,\n    episodesFilterStatus: state.menuFilter.episodesMenuItem,\n  };\n}\n\nexport default connect(mapState, {\n  changeToggledStatus,\n  changeHiddenStatus,\n  activeSidebar,\n  charFilterActive,\n  locationsFilterActive,\n  episodesFilterActive,\n})(Filter);\n","import Filter from './Filter';\nexport default Filter;\n","// CONSTS\nlet CHANGE_MODAL_STATUS = 'CHANGE_MODAL_STATUS';\nlet STORE_ACTUAL_OBJECT = 'STORE_ACTUAL_OBJECT';\n\nlet initialData = {\n  open: false,\n  data: {},\n};\n\n// REDUCERS\nexport default function reducer(state = initialData, action: any) {\n  switch (action.type) {\n    case CHANGE_MODAL_STATUS:\n      return { ...state, open: action.payload };\n    case STORE_ACTUAL_OBJECT:\n      return { ...state, data: action.payload };\n    default:\n      return state;\n  }\n}\n\n// ACTIONS\nexport let storeActualObject = (actual: object) => (\n  dispatch: any,\n  getState: any\n) => {\n  dispatch({\n    type: STORE_ACTUAL_OBJECT,\n    payload: actual,\n  });\n};\n\nexport let changeModalStatus = () => (dispatch: any, getState: any) => {\n  let { open } = getState().modalStatus;\n  dispatch({\n    type: CHANGE_MODAL_STATUS,\n    payload: !open,\n  });\n};\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\nimport { changeModalStatus, storeActualObject } from '../../redux/modalDuck';\n\n// STYLES ──────────────────────────────────────────────────────────\nimport './itemData.css';\n\ninterface Props {\n  name?: string;\n  image?: string;\n  dimension?: string;\n  episode?: string;\n  id?: any;\n  changeModalStatus?: any;\n  storeActualObject?: any;\n  actualObject?: object;\n}\n\nlet ItemData = ({\n  name,\n  image,\n  dimension,\n  episode,\n  id,\n  changeModalStatus,\n  storeActualObject,\n  actualObject,\n}: Props) => {\n  async function onClickItem() {\n    await storeActualObject(actualObject);\n    changeModalStatus();\n  }\n\n  return (\n    <div key={id} onClick={onClickItem}>\n      {image ? (\n        <div className=\"item-data\">\n          <img src={image} className=\"image\" alt=\"pic-from-api\" />\n          <div className=\"item-text\">\n            <h4 className=\"text-h4\">{name}</h4>\n          </div>\n        </div>\n      ) : (\n        <div className=\"locat-epi-container\">\n          <div>\n            <h4 className=\"title-data\">Name</h4>\n            <h4 className=\"text-locat-epi\">{name}</h4>\n          </div>\n          {dimension ? (\n            <div>\n              <h4 className=\"title-data\">Dimension</h4>\n              <h4 className=\"text-locat-epi\">{dimension}</h4>\n            </div>\n          ) : (\n            <div>\n              <h4 className=\"title-data\">Episode</h4>\n              <h4 className=\"text-locat-epi\">{episode}</h4>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction mapState(state: any) {\n  return {};\n}\n\nexport default connect(mapState, { changeModalStatus, storeActualObject })(\n  ItemData\n);\n","import ItemData from './ItemData';\nexport default ItemData;\n","import Loader from './Loader';\nexport default Loader;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES ─────────────────────────────────────────────────────────\nimport './loader.scss';\n\nlet Loader = () => {\n  return (\n    <div className=\"content\">\n      <div className=\"planet\">\n        <div className=\"ring\"></div>\n        <div className=\"cover-ring\"></div>\n        <div className=\"spots\">\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n      <p>loading</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import ModalItemGrid from './ModalItemGrid';\nexport default ModalItemGrid;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES ─────────────────────────────────────────────────────────\nimport './modalItemGrid.css';\n\ninterface Props {\n  image: string;\n  name: string;\n}\n\nlet ModalItemGrid = ({ image, name }: Props) => {\n  return (\n    <div className=\"modal-item-grid\">\n      <img className=\"modal-item-image\" src={image} alt=\"modal\"></img>\n      <h2 className=\"modal-item-name\">{name}</h2>\n    </div>\n  );\n};\n\nexport default ModalItemGrid;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\n\n// COMPONENTS ─────────────────────────────────────────────────────\nimport ModalItemGrid from '../modalItemGrid';\n\n// STYLES ─────────────────────────────────────────────────────────\nimport '../modalPopup/modalPopup.css';\n\ninterface Props {\n  actualObject?: any;\n}\n\nlet LocatEpisModal = ({ actualObject }: Props) => {\n  // INITIALIZING CONSTS\n  let { name, type, dimension, episode, air_date } = actualObject;\n  let firstFiveResidents: any;\n  let firstFiveCharacters: any;\n  let FiveRes: any;\n  let FiveChars: any;\n  // ---> ENDS INITIALIZING <---\n\n  // IF LOCATIONS OR EPISODES COMES FROM QUERY, THIS SECCION WILL CONTROLS THEM\n  // THIS SECCION TOOKS FIRST FIVE CHARACTERS OR RESIDENTS.\n  actualObject.residents\n    ? (firstFiveResidents = actualObject.residents.slice(0, 5))\n    : (firstFiveResidents = false);\n  actualObject.characters\n    ? (firstFiveCharacters = actualObject.characters.slice(0, 5))\n    : (firstFiveCharacters = false);\n  // ---> ENDS CONTROL SECCION <---\n\n  // MAPING 5 FIRST RESIDENTS/CHARACTERS DATA\n  firstFiveResidents\n    ? (FiveRes = firstFiveResidents.map((fiveChars: any) => (\n        <ModalItemGrid name={fiveChars.name} image={fiveChars.image} />\n      )))\n    : (FiveRes = null);\n\n  firstFiveCharacters\n    ? (FiveChars = firstFiveCharacters.map((fiveChars: any) => (\n        <ModalItemGrid name={fiveChars.name} image={fiveChars.image} />\n      )))\n    : (FiveChars = null);\n  // ---> ENDS MAPING DATA <---\n\n  return (\n    <div>\n      <div className=\"loc-ep-name\">\n        <h2 className=\"responsive-margin text-decoration modal-name-text\">\n          Name\n        </h2>\n        <h2 className=\"responsive-margin center-text\">{name}</h2>\n      </div>\n\n      <div className=\"loc-ep-name\">\n        <h2 className=\"responsive-margin text-decoration modal-name-text\">\n          {dimension ? 'Type' : 'Release date'}\n        </h2>\n        <h2 className=\"responsive-margin center-text\">\n          {dimension ? type : air_date}\n        </h2>\n      </div>\n\n      <div className=\"loc-ep-name\">\n        <h2 className=\"responsive-margin text-decoration modal-name-text\">\n          {dimension ? 'Dimension' : 'Episode'}\n        </h2>\n        <h2 className=\"responsive-margin center-text\">\n          {dimension ? dimension : episode}\n        </h2>\n      </div>\n\n      <h2 className=\"responsive-margin text-decoration modal-name-text\">\n        {dimension ? 'First 5 Residents' : 'First 5 Characters'}\n      </h2>\n\n      {dimension ? (\n        actualObject.residents[0].name ? (\n          <div className=\"chars-residents-grid\">{FiveRes}</div>\n        ) : (\n          <div className=\"alert-no-residents\">\n            <h2 className=\"alert-text\">NO RESIDENTS ON THIS LOCATIONS</h2>\n          </div>\n        )\n      ) : actualObject.characters[0].name ? (\n        <div className=\"chars-residents-grid\">{FiveChars}</div>\n      ) : (\n        <div className=\"alert-no-residents\">\n          <h2 className=\"alert-text\">NO CHARACTERS ON THIS EPISODE</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction mapState(state: any) {\n  return {\n    actualObject: state.modalStatus.data,\n  };\n}\n\nexport default connect(mapState)(LocatEpisModal);\n","import LocatEpisModal from './LocatEpisModal';\nexport default LocatEpisModal;\n","import MenuButton from './MenuButton';\nexport default MenuButton;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport { MenuIcon } from '../../utils/icons/Icons';\nimport './menuButton.css';\n\ninterface Props {\n  onClick?: () => void;\n}\n\nlet MenuButton = ({ onClick }: Props) => {\n  return (\n    <div className=\"button-container\" onClick={onClick}>\n      <div className=\"wrapp-menu-icon\">\n        <MenuIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default MenuButton;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\nimport { changeModalStatus } from '../../redux/modalDuck';\n\n// STYLES & COMPONENTS ────────────────────────────────────────────\nimport CharsModal from '../charsModal';\nimport Modal from 'react-modal';\nimport LocatEpisModal from '../locatEpisModal';\nimport './modalPopup.css';\n\ninterface Props {\n  modalStatus?: any;\n  changeModalStatus?: any;\n  actualObject?: any;\n}\n\nModal.setAppElement('#root');\n\nlet ModalPopup = ({ modalStatus, changeModalStatus, actualObject }: Props) => {\n  // INITIALIZING CONSTS ────────────────────────────────────────────\n  let { dimension, episode } = actualObject;\n  // ──> end <──\n\n  return (\n    <Modal\n      isOpen={modalStatus}\n      onRequestClose={() => changeModalStatus()}\n      className=\"overlay modal-content\"\n      style={{\n        overlay: {\n          backgroundColor: 'rgba(113, 80, 145, 0)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        },\n      }}\n    >\n      <div className=\"modal-container\">\n        {dimension || episode ? <LocatEpisModal /> : <CharsModal />}\n      </div>\n    </Modal>\n  );\n};\n\nfunction mapState(state: any) {\n  return {\n    modalStatus: state.modalStatus.open,\n    actualObject: state.modalStatus.data,\n  };\n}\n\nexport default connect(mapState, { changeModalStatus })(ModalPopup);\n","import ModalPopup from './ModalPopup';\nexport default ModalPopup;\n","// REACT ──────────────────────────────────────────────────────────\nimport React, { useEffect } from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\nimport { getMeTheData } from '../../redux/charsDuck';\n\n// STYLES ─────────────────────────────────────────────────────────\nimport './pageButton.css';\n\ninterface Props {\n  error?: any;\n  input?: any;\n  fetching?: boolean;\n  prev?: any;\n  next?: any;\n  getMeTheData?: any;\n}\n\nlet PageButton = ({\n  error,\n  input,\n  fetching,\n  prev,\n  next,\n  getMeTheData,\n}: Props) => {\n  let prevButton = document.getElementById('prev');\n  let nextButton = document.getElementById('next');\n\n  useEffect(() => {\n    if (!(input.length > 2) || error) {\n      prevButton?.classList.add('prev-display');\n      nextButton?.classList.add('next-display');\n    }\n  });\n\n  if (prev != null && !fetching) {\n    prevButton?.classList.remove('prev-display');\n  } else {\n    prevButton?.classList.add('prev-display');\n  }\n\n  if (next != null && !fetching) {\n    nextButton?.classList.remove('next-display');\n  } else {\n    nextButton?.classList.add('next-display');\n  }\n\n  let onClickPrev = () => {\n    getMeTheData(prev);\n  };\n\n  let onClickNext = () => {\n    getMeTheData(next);\n  };\n\n  return (\n    <div className=\"page-button-grid\">\n      <div className=\"page-button-container\">\n        <div\n          id=\"prev\"\n          className=\"prev-button prev-display\"\n          onClick={onClickPrev}\n        >\n          <h2>Prev</h2>\n        </div>\n        <div\n          id=\"next\"\n          className=\"next-button next-display\"\n          onClick={onClickNext}\n        >\n          <h2>Next</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapState(state: any) {\n  return {\n    fetching: state.characters.fetching,\n    error: state.characters.error,\n    prev: state.characters.prev,\n    next: state.characters.next,\n    input: state.characters.input,\n  };\n}\n\nexport default connect(mapState, { getMeTheData })(PageButton);\n","import PageButton from './PageButton';\nexport default PageButton;\n","import SwitcherFilter from './SwitchFilter';\nexport default SwitcherFilter;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport './switchFilter.css';\n\ninterface Props {\n  onClick: () => void;\n}\n\nlet SwitchFilter = ({ onClick }: Props) => {\n  return (\n    <label className=\"switch\">\n      <input type=\"checkbox\" id=\"togBtn\" />\n      <div className=\"slider round\" onClick={onClick} />\n    </label>\n  );\n};\n\nexport default SwitchFilter;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/filterDuck';\nimport { getInput } from '../../redux/charsDuck';\n\n// STYLES & COMPONENTS ─────────────────────────────────────────────\nimport SwitchFilter from '../switchFilter';\nimport './searcher.scss';\n\ninterface Props {\n  changeFilter?: any;\n  getInput: any;\n  filterType?: boolean;\n  charFilter?: boolean;\n  locationFilter?: boolean;\n  byNameOrType?: string;\n  entitie?: string;\n  inputValue?: string;\n}\n\nclass Searcher extends React.Component<Props> {\n  stillOnFocus() {\n    let element = document.getElementById('searcher');\n    element?.focus();\n  }\n\n  render() {\n    let {\n      changeFilter,\n      filterType,\n      byNameOrType,\n      charFilter,\n      locationFilter,\n      entitie,\n      getInput,\n      inputValue,\n    } = this.props;\n    filterType ? (byNameOrType = 'name') : (byNameOrType = 'type');\n    charFilter\n      ? (entitie = 'characters')\n      : locationFilter\n      ? (entitie = 'locations')\n      : (entitie = 'episodes');\n    return (\n      <label id=\"searcher\" className=\"input-container\">\n        <div className=\"shadow\" />\n        <div className=\"center\">\n          <input\n            id=\"intext\"\n            type=\"text\"\n            className=\"input\"\n            placeholder={`search ${entitie} by ${byNameOrType}...`}\n            onChange={(event) => getInput(event.target.value)}\n            value={inputValue}\n          />\n          <div className=\"align\" onClick={this.stillOnFocus}>\n            <SwitchFilter onClick={() => changeFilter()} />\n          </div>\n        </div>\n        <div className=\"sticks\" />\n      </label>\n    );\n  }\n}\n\nfunction mapState(state: any) {\n  return {\n    filterType: state.menuFilter.byName,\n    charFilter: state.menuFilter.charsMenuItem,\n    locationFilter: state.menuFilter.locationsMenuItem,\n    inputValue: state.characters.input,\n  };\n}\n\nexport default connect(mapState, { changeFilter, getInput })(Searcher);\n","import Searcher from './Searcher';\nexport default Searcher;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\nimport { changeToggledStatus } from '../../redux/sidebarDuck';\nimport { clearData } from '../../redux/charsDuck';\n\n// COMPONENTS ─────────────────────────────────────────────────────\nimport {\n  Searcher,\n  MenuButton,\n  ItemData,\n  Loader,\n  ModalPopup,\n  PageButton,\n} from '../../components';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport swal from 'sweetalert';\n\n// STYLES ──────────────────────────────────────────────────────────\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './home.css';\n\ninterface Props {\n  changeToggledStatus?: any;\n  clearData?: any;\n  loading?: boolean;\n  error?: any;\n  chars?: any;\n}\n\nlet Home = ({\n  changeToggledStatus,\n  clearData,\n  chars,\n  loading,\n  error,\n}: Props) => {\n  if (error) {\n    swal('Sorry :(', 'Not Found', 'error').then(clearData());\n  }\n\n  let results = chars.data.map((char: any) => (\n    <ItemData\n      name={char.name}\n      image={char.image}\n      dimension={char.dimension}\n      episode={char.episode}\n      key={char.id}\n      actualObject={char}\n    />\n  ));\n  return (\n    <div className=\"home\">\n      <ModalPopup />\n      <div className=\"home-content\">\n        <MenuButton onClick={() => changeToggledStatus()} />\n        <PerfectScrollbar className=\"home-body\">\n          <div className=\"searcher-grid\">{<Searcher />}</div>\n          {loading ? (\n            <div className=\"searcher-grid\">\n              <Loader />\n            </div>\n          ) : (\n            results\n          )}\n          <PageButton />\n        </PerfectScrollbar>\n      </div>\n    </div>\n  );\n};\n\nfunction mapState(state: any) {\n  return {\n    chars: state.characters,\n    error: state.characters.error,\n    loading: state.characters.fetching,\n  };\n}\n\nexport default connect(mapState, { changeToggledStatus, clearData })(Home);\n","import Home from './Home';\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Home } from './screens';\nimport { Filter } from './components';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Filter />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// REDUX\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n// REDUCERS\nimport sidebarReducer from './sidebarDuck';\nimport charsReducer, { getInput } from './charsDuck';\nimport filterReducer from './filterDuck';\nimport modalStatus from './modalDuck';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\n// Es la raiz que contiene y combina todos los reducers\nlet rootReducer = combineReducers({\n  sidebarStatuses: sidebarReducer,\n  characters: charsReducer,\n  menuFilter: filterReducer,\n  modalStatus: modalStatus,\n});\n\n// --- composeEnhacers ---\n// Es una herramienta de desarrolladores en pocas palabras para debugging,\n// en este caso lo utilizamos para el middleware.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Un --- middleware --- actúa como un puente entre un cliente y un servidor.\n// En este caso específico, un --- thunk --- es una función que actúa como un wrapper\n// ya que envuelve una expresión para retrasar su evaluación.\n// Cuando usamos un Redux Store básico,\n// lo único que puedes hacer son actualizaciones síncronas sencillas por medio de una acción.\n// Pero si quieres trabajar con lógica asíncrona para interactuar con el Store,\n// necesitarás algo más. Aquí es donde entra --- redux-thunk ---.\n// --------------------------------------------------------------\n// Si es una acción regular, redux-thunk no hace nada y la acción es procesada por el reducer del Store.\n// Si la accion es una función, redux-thunk la invoca y usa los métodos dispatch y getState y cualquier argumento adicional.\nexport default function generateStore() {\n  let store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  getInput('')(store.dispatch, store.getState);\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport generateStore from './redux/store';\n\nlet store = generateStore();\n\nlet WithStore = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <WithStore />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}