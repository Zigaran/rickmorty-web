{"version":3,"sources":["redux/sidebarDuck.ts","utils/icons/Icons.tsx","components/sidebarHeadItem/index.ts","components/sidebarHeadItem/SidebarHeadItem.tsx","components/sidebarFootItem/index.ts","components/sidebarFootItem/SidebarFootItem.tsx","components/space/index.ts","components/space/Space.tsx","components/filter/Filter.tsx","components/filter/index.ts","components/menuButton/index.ts","components/menuButton/MenuButton.tsx","components/searcher/index.ts","components/searcher/Searcher.tsx","screens/home/Home.tsx","screens/home/index.ts","App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["sidebarStatuses","toggled","hidden","MenuIcon","className","CharIcon","LocationIcon","EpisodesIcon","PuzzleIcon","SidebarHeadItem","onClick","text","SidebarFootItem","href","target","rel","Space","connect","Filter","state","hiddenStatus","toggledStatus","changeHiddenStatus","width","dispatch","getState","type","payload","w","window","innerWidth","image","collapsed","breakPoint","iconShape","icon","MenuButton","Searcher","document","getElementById","addEventListener","e","stopPropagation","preventDefault","placeholder","id","React","Component","Home","changeToggledStatus","App","Boolean","location","hostname","match","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","WithStore","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee5a2a33.chunk.js","sourcesContent":["// CONSTS\nlet CHANGE_SIDEBAR_TOGGLED_STATUS = 'SIDEBAR_TOGGLE_STATUS';\nlet CHANGE_SIDEBAR_HIDDEN_STATUS = 'SIDEBAR_HIDDEN_STATUS';\n\ninterface hiddeStatusType {\n  type: typeof CHANGE_SIDEBAR_HIDDEN_STATUS;\n  payload: boolean;\n}\n\ninterface toggleStatusType {\n  type: typeof CHANGE_SIDEBAR_HIDDEN_STATUS;\n  payload: boolean;\n}\n\ntype actionTypes = toggleStatusType | hiddeStatusType;\n\nlet sidebarStatuses = {\n  toggled: false,\n  hidden: false,\n};\n\n// REDUCERS\nexport default function reducer(state = sidebarStatuses, action: any) {\n  switch (action.type) {\n    case CHANGE_SIDEBAR_TOGGLED_STATUS:\n      return { ...state, toggled: action.payload };\n    case CHANGE_SIDEBAR_HIDDEN_STATUS:\n      return { ...state, hidden: action.payload };\n    default:\n      return state;\n  }\n}\n\n// ACTIONS\nexport let changeHiddenStatus = (width: any) => (\n  dispatch: any,\n  getState: any\n) => {\n  let { hidden } = getState().sidebarStatuses;\n  let { toggled } = getState().sidebarStatuses;\n  width < 769\n    ? dispatch({\n        type: CHANGE_SIDEBAR_TOGGLED_STATUS,\n        payload: !toggled,\n      })\n    : dispatch({\n        type: CHANGE_SIDEBAR_HIDDEN_STATUS,\n        payload: !hidden,\n      });\n};\n\nexport let changeToggledStatus = () => (dispatch: any, getState: any) => {\n  let { toggled } = getState().sidebarStatuses;\n  dispatch({\n    type: CHANGE_SIDEBAR_TOGGLED_STATUS,\n    payload: !toggled,\n  });\n};\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES ─────────────────────────────────────────────────────────\nimport './styles.css';\n\ninterface Props {\n  className?: string;\n}\n\nexport let MenuIcon = () => {\n  return <i className=\"fas fa-bars fa-lg\" />;\n};\n\nexport let CharIcon = () => {\n  return <i className=\"fas fa-user-astronaut fa-2x\" />;\n};\n\nexport let LocationIcon = () => {\n  return <i className=\"fas fa-map-marker-alt fa-2x\" />;\n};\n\nexport let EpisodesIcon = () => {\n  return <i className=\"fas fa-book fa-lg fa-2x\" />;\n};\n\nexport let PuzzleIcon = ({ className }: Props) => {\n  return <i className={`fas fa-puzzle-piece fa-xl ${className}`} />;\n};\n\nexport let SearchIcon = () => {\n  return <i className=\"fas fa-search\" />;\n};\n","import SidebarHeadItem from './SidebarHeadItem';\nexport default SidebarHeadItem;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport { MenuIcon } from '../../utils/icons/Icons';\nimport '../../utils/styles/sidebar/styles.css';\nimport './sidebarHeadItem.css';\n\ninterface Props {\n  onClick: () => void;\n  text?: string;\n}\n\nlet SidebarHeadItem = ({ onClick, text }: Props) => {\n  return (\n    <ul className=\"header-underline\" onClick={onClick}>\n      <li className=\"pro-menu-item\">\n        <div className=\"pro-inner-item\">\n          <span className=\"pro-icon-wrapper\">\n            <span className=\"pro-icon\">\n              <MenuIcon />\n            </span>\n          </span>\n          <span className=\"pro-item-content headerText\">{text}</span>\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default SidebarHeadItem;\n","import SidebarFootItem from './SidebarFootItem';\nexport default SidebarFootItem;\n","import React from 'react';\nimport { PuzzleIcon } from '../../utils/icons/Icons';\nimport './sidebarFootItem.css';\n\ninterface Props {\n  text?: string;\n}\n\nlet SidebarFootItem = () => {\n  return (\n    <div className=\"container\">\n      <a\n        href=\"https://thepuzzle.digital/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"bg-icon\"\n      >\n        <PuzzleIcon className=\"icon\" />\n        <h6>Puzzle Challenge</h6>\n      </a>\n    </div>\n  );\n};\n\nexport default SidebarFootItem;\n","import Space from './Space';\nexport default Space;\n","import React from 'react';\nimport './space.css';\n\nlet Space = () => {\n  return <div className=\"space\"></div>;\n};\n\nexport default Space;\n","// REACT ──────────────────────────────────────────────────────────\nimport React from 'react';\n\n// REDUX ──────────────────────────────────────────────────────────\nimport { connect } from 'react-redux';\nimport { changeHiddenStatus } from '../../redux/sidebarDuck';\n\n// SIDEBAR FILTER ─────────────────────────────────────────────────\nimport {\n  ProSidebar,\n  SidebarContent,\n  Menu,\n  MenuItem,\n  SidebarFooter,\n} from 'react-pro-sidebar';\nimport SidebarHeadItem from '../sidebarHeadItem';\nimport SidebarFootItem from '../sidebarFootItem';\n\n// STYLES & UTILS ─────────────────────────────────────────────────\nimport { CharIcon, LocationIcon, EpisodesIcon } from '../../utils/icons/Icons';\nimport Space from '../space';\nimport '../../utils/styles/sidebar/styles.css';\nimport './filter.css';\n\ninterface Props {\n  hiddenStatus?: any;\n  toggledStatus?: any;\n  changeHiddenStatus?: any;\n}\n\nfunction Filter({ hiddenStatus, toggledStatus, changeHiddenStatus }: Props) {\n  // let sidebarResponsiveToggle = () => {\n  //   let w = window.innerWidth;\n  //   console.log(w);\n  //   return w < 769 ? () => changeToggledStatus() : () => changeHiddenStatus();\n  // };\n\n  const w = window.innerWidth;\n  return (\n    <ProSidebar\n      width={30}\n      image=\"https://wallpaperaccess.com/full/795172.jpg\"\n      collapsed={hiddenStatus}\n      className=\"flex\"\n      breakPoint=\"md\"\n      toggled={toggledStatus}\n    >\n      <SidebarContent>\n        <Menu iconShape=\"circle\">\n          <SidebarHeadItem\n            text=\"Menu Filter\"\n            onClick={() => changeHiddenStatus(w)}\n          />\n          <Space />\n          <MenuItem icon={<CharIcon />}>Characters</MenuItem>\n          <MenuItem icon={<LocationIcon />}>Locations</MenuItem>\n          <MenuItem icon={<EpisodesIcon />}>Episodes</MenuItem>\n        </Menu>\n      </SidebarContent>\n      <SidebarFooter>\n        <SidebarFootItem />\n      </SidebarFooter>\n    </ProSidebar>\n  );\n}\n\nfunction mapState(state: any) {\n  return {\n    hiddenStatus: state.sidebarStatuses.hidden,\n    toggledStatus: state.sidebarStatuses.toggled,\n  };\n}\n\nexport default connect(mapState, { changeHiddenStatus })(Filter);\n","import Filter from './Filter';\nexport default Filter;\n","import MenuButton from './MenuButton';\nexport default MenuButton;\n","import React from 'react';\nimport './menuButton.css';\nimport { MenuIcon } from '../../utils/icons/Icons';\n\ninterface Props {\n  onClick?: () => void;\n}\n\nlet MenuButton = ({ onClick }: Props) => {\n  return (\n    <div className=\"button-container\" onClick={onClick}>\n      <MenuIcon />\n    </div>\n  );\n};\n\nexport default MenuButton;\n","import Searcher from './Searcher';\nexport default Searcher;\n","import React from 'react';\nimport './searcher.scss';\n\ninterface Props {\n  e?: any;\n}\n\nclass Searcher extends React.Component<Props> {\n  componentDidMount() {\n    document.getElementById('searcher')?.addEventListener('click', (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n    });\n  }\n\n  render() {\n    return (\n      <label className=\"input-container closed\">\n        <div className=\"shadow\"></div>\n        <div className=\"center\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search characters/locations\"\n          />\n        </div>\n        <div className=\"sticks\" id=\"searcher\"></div>\n      </label>\n    );\n  }\n}\n\nexport default Searcher;\n","import React from 'react';\nimport './home.css';\nimport { Searcher, Filter, MenuButton } from '../../components';\nimport { connect } from 'react-redux';\nimport { changeToggledStatus } from '../../redux/sidebarDuck';\n\ninterface Props {\n  changeToggledStatus?: any;\n}\n\nlet Home = ({ changeToggledStatus }: Props) => {\n  return (\n    <div className=\"home\">\n      <Filter />\n      <div className=\"home-content\">\n        <MenuButton onClick={() => changeToggledStatus()} />\n        <Searcher />\n      </div>\n    </div>\n  );\n};\n\nfunction mapState(state: any) {\n  return {};\n}\n\nexport default connect(mapState, { changeToggledStatus })(Home);\n","import Home from './Home';\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport { Home } from './screens';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// REDUX\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n// REDUCERS\nimport sidebarReducer from './sidebarDuck';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\n// Es la raiz que contiene y combina todos los reducers\nlet rootReducer = combineReducers({\n  sidebarStatuses: sidebarReducer,\n});\n\n// --- composeEnhacers ---\n// Es una herramienta de desarrolladores en pocas palabras para debugging,\n// en este caso lo utilizamos para el middleware.\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Un --- middleware --- actúa como un puente entre un cliente y un servidor.\n// En este caso específico, un --- thunk --- es una función que actúa como un wrapper\n// ya que envuelve una expresión para retrasar su evaluación.\n// Cuando usamos un Redux Store básico,\n// lo único que puedes hacer son actualizaciones síncronas sencillas por medio de una acción.\n// Pero si quieres trabajar con lógica asíncrona para interactuar con el Store,\n// necesitarás algo más. Aquí es donde entra --- redux-thunk ---.\n// --------------------------------------------------------------\n// Si es una acción regular, redux-thunk no hace nada y la acción es procesada por el reducer del Store.\n// Si la accion es una función, redux-thunk la invoca y usa los métodos dispatch y getState y cualquier argumento adicional.\nexport default function generateStore() {\n  let store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport generateStore from './redux/store';\n\nlet store = generateStore();\n\nlet WithStore = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <WithStore />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}